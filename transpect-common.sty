%%
%% This is file `transpect-common.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% transpect.dtx  (with options: `common')
%% 
%% IMPORTANT NOTICE:
%% 
%% For the copyright see the source file.
%% 
%% Any modified versions of this file must be renamed
%% with new filenames distinct from transpect-common.sty.
%% 
%% For distribution of the original source see the terms
%% for copying and modification in the file transpect.dtx.
%% 
%% This generated file may be distributed as long as the
%% original source files, as listed above, are part of the
%% same distribution. (The sources need not necessarily be
%% in the same archive or directory.)
\def\fileversion{0.107}%
\def\filedate{2021-09-15}%

%%
%% module for le-tex transpect.cls that provides some commonly used base macros.
%%
%% Maintainer: p.schulz@le-tex.de
%%
%% lualatex  -  texlive > 2019
%%
\NeedsTeXFormat{LaTeX2e}[2018/12/01]
\ProvidesPackage{transpect-common}
    [\filedate \fileversion le-tex transpect common module]
\def\afterfi#1\fi{\fi#1}
\def\@afterbox{%
  \everypar{%
    \if@nobreak
      \@nobreakfalse
      \clubpenalty \@M
      \if@afterindent \else
        {\setbox\z@\lastbox}%
        \everypar{}%
      \fi
    \else
      \clubpenalty \@clubpenalty
      {\setbox\z@\lastbox}%
      \everypar{}%
    \fi}}
\def\CalcRatio#1#2{\strip@pt\dimexpr\number\numexpr\number\dimexpr#1\relax*65536/\number\dimexpr#2\relax\relax sp}
\newbox\tp@tempboxa
\newbox\tp@tempboxb
\def\@gobbleopt#1#{\@gobble}
\def\tpGobble{%
  \let\footnote\@gobbleopt%
  \let\label\@gobble%
  \let\index\@gobbleopt}%
\long\def\tp@iterate#1#2#3#4{%
  \advance#1\@ne\relax
  #1=#2\relax%
  \expandafter\ifnum#1>#3\relax%
  \else
    #4%
    \tp@iterate{#1}{\the#1}{#3}{#4}%
  \fi}%
%% \section{Hooks}
%% In this part we provide the facility to utilize Hooks to patch code
%% into different parts of the package depending on options and loaded
%% packages.
\RequirePackage{etoolbox}
\def\tpDeclareHook#1{\expandafter\global\expandafter\let\csname tp@hook@\tp@namespace @#1\endcsname\@empty}
\def\tpAddToHook{\@ifnextchar [{\tp@add@to@hook}{\tp@add@to@hook[\tp@namespace]}}%]
\def\tp@add@to@hook[#1]#2#3{%
  \expandafter\ifx\csname tp@hook@\tp@namespace @#1\endcsname\relax
    \tpDeclareHook{#1@#2}%
  \fi
  \csgappto{tp@hook@#1@#2}{#3}%
}
\def\tpUseHook#1{\expandafter\ifx\csname tp@hook@\tp@namespace @#1\endcsname\relax\else\csname tp@hook@\tp@namespace @#1\endcsname\fi}
\def\tpProvideComp#1#2#3#4{%
  \ltx@LocalExpandAfter\global\expandafter\let\csname tp@\tp@namespace @#4\endcsname\relax
  \expandafter\long\expandafter\def\csname #1\endcsname##1{#2\expandafter\long\expandafter\def\csname tp@\tp@namespace @#4\endcsname{##1}\ignorespaces#3}}
\def\tpNamespace#1{\def\tp@namespace{#1}}
\def\tpUseComp#1{\csname tp@\tp@namespace @#1\endcsname}
\long\def\tpIfComp#1#2#3{\expandafter\ifx\csname tp@\tp@namespace @#1\endcsname\relax#3\else#2\fi}
\long\def\tpIfCompEmpty#1#2#3{\long\def\@tempa{}\expandafter\ifx\csname tp@\tp@namespace @#1\endcsname\@tempa#2\else#3\fi}
\def\tp@check@empty#1#2#3{%
  \tpIfComp{#3#2}
    {\tpIfCompEmpty{#3#2}
      {\expandafter\global\expandafter\let\csname tp@#1@#3#2\endcsname\relax}
      {}}
    {\tpIfComp{#2}
      {\expandafter\expandafter\expandafter\let\expandafter\csname tp@#1@#3#2\expandafter\endcsname\csname tp@#1@#2\endcsname}
      {}}}
\begingroup
\catcode`"=12
\gdef\tpParseAttributes#1#2{%
  \if!#1!\else
    \if!#2!\else
      \def\tp@cur@node{#1}%
      \@tp@parse@attributes #2,,\@nil
    \fi\fi}
\gdef\tp@parse@kv#1=#2=#3\@nil{%
  \edef\@argii{#2}%
  \ifx\@argii\@empty
    \expandafter\let\csname tp@\tp@cur@node @attr@#1\endcsname\@empty%
  \else
    \ifx #2 =\else
      \expandafter\def\csname tp@\tp@cur@node @attr@#1\endcsname{#2}%
    \fi
  \fi}
\gdef\@tp@parse@attributes #1,#2,\@nil{%
  \if!#1!\else
    \tp@parse@kv#1==\@nil
    \if!#2!\else
      \@tp@parse@attributes#2,\@nil
    \fi\fi}
\endgroup

\DeclareRobustCommand{\tpSetProperty}[2]{\expandafter\long\expandafter\protect\expandafter\def\csname tp@\tp@namespace @#1\endcsname{#2}}
\DeclareRobustCommand{\tpSetValProp}[2]{\def\@tempa{\tpSetProperty{#1}}\expandafter\@tempa\expandafter{#2}}
\DeclareRobustCommand{\tpSetPropertyX}[2]{\expandafter\long\expandafter\protect\expandafter\edef\csname tp@\tp@namespace @#1\endcsname{#2}}
\def\tpUseProperty#1{\csname tp@\tp@namespace @#1\endcsname}
\DeclareRobustCommand{\tpIfProp}[3]{\long\def\@tempa{}%
  \expandafter\ifx\csname tp@\tp@namespace @#1\endcsname\@tempa#3\else#2\fi\ignorespaces}
\DeclareRobustCommand{\tpIfPropVal}[4]{\long\def\@tempa{#2}%
  \expandafter\ifx\csname tp@\tp@namespace @#1\endcsname\@tempa\relax#3\else#4\fi\ignorespaces}
\DeclareRobustCommand{\tpAddToDefault}[2]{\csgappto{tp@#1@default}{#2}}
\def\tpCascadeProps#1#2{%
  \csname tp@#2@default\endcsname
  \expandafter\ifx\csname tp@#2@#1@parent\endcsname\relax\else
    \expandafter\tp@inherit@props\expandafter{\csname tp@#2@#1@parent\endcsname}{#2}%
  \fi
  \csname tp@#2@#1@properties\endcsname
}
\def\tp@inherit@props#1#2{%
  \expandafter\ifx\csname tp@#2@#1@parent\endcsname\relax\else
    \edef\@tempa{\csname tp@#2@#1@parent\endcsname}%
    \expandafter\tp@inherit@props\expandafter{\@tempa}{#2}%
  \fi
  \csname tp@#2@#1@properties\endcsname
}
\long\def\tpDeclareClass{\@ifnextchar [{\@tp@set@class}{\@tp@set@class[default]}}%]
\long\def\@tp@set@class[#1]#2{\@ifnextchar [{\tp@set@class[#1]{#2}}{\tp@set@class[#1]{#2}[]}}%]
\long\gdef\tp@default@class@default{}
\long\def\tp@set@class[#1]#2[#3]#4{%
  \def\@argii{#2}\ifx\@argii\@empty\let\@argii\tp@str@default\fi%
  \if!#3!\else
    \expandafter\long\expandafter\def\csname tp@#1@class@\@argii @parent\endcsname{#3}%
  \fi
  \expandafter\long\expandafter\def\csname tp@#1@class@\@argii\endcsname{#4}%
}
\def\tpUseClass#1#2{%
  \expandafter\ifx\csname tp@#2@class@#1\endcsname\relax
    \expandafter\ifx\csname tp@default@class@#1\endcsname\relax
      \PackageError{transpect.cls}{Class `#1' with scope `#2' not defined!}{Please declare the class `#1'!}%
    \fi
  \fi
  \csname tp@default@class@#1\endcsname%
  \expandafter\ifx\csname tp@#2@class@#1@parent\endcsname\relax\else
    \expandafter\tpUseClass\expandafter{\csname tp@#2@class@#1@parent\endcsname}{#2}%
  \fi
  \csname tp@#2@class@#1\endcsname}

\def\tp@str@default{default}
\def\tp@str@table{table}
\def\tp@str@figure{figure}
\def\@xminusvskip{%
  \ifdim\lastskip<\@tempskipb
  \else
    \ifdim\@tempskipb<\z@
      \ifdim\lastskip<\z@
      \else
        \advance\@tempskipb\lastskip
        \vskip-\lastskip
        \vskip \@tempskipb
      \fi
    \fi
  \fi}
\def\minusvspace#1{%
  \ifvmode
     \if@minipage\else
       \ifdim \lastskip =\z@
         \ifx\@vspace@calcify\@undefined
           \vskip #1\relax
         \else
           \@vspace@calcify{#1}%
         \fi
       \else
       \setlength\@tempskipb{#1}%
         \@xminusvskip
       \fi
     \fi
  \else
    \@noitemerr
  \fi}
\let\hack\@firstofone
\let\Hack\@firstofone
\let\hackfor\@gobble
\let\Hackfor\@gobble

\def\tp@restore@init#1{%
  \AtBeginDocument{\expandafter\ifx\csname #1\endcsname\relax\else
      \immediate\write\@auxout{\string\expandafter\string\gdef\string\csname\space #1\string\endcsname{\csname #1\endcsname}}%
    \fi}}
\def\tp@init@l@#1#2#3{%
  \expandafter\ifx\csname c@#1depth\endcsname\relax
    \expandafter\global\expandafter\newcount\csname c@#1depth\endcsname
    \expandafter\global\csname c@#1depth\endcsname=0\relax
  \fi
  \tp@restore@init{tp-\tp@namespace-#1-number-#2-maxwd}%
  \tp@restore@init{tp-\tp@namespace-#1-number-#2-indent}%
  \expandafter\ifx\csname tp@#1@extract@data\endcsname\relax
    \expandafter\let\csname tp@#1@extract@data\endcsname\tp@extract@generic
  \fi
  \expandafter\ifx\csname tp@#1@print@entry\endcsname\relax
    \expandafter\let\csname tp@#1@print@entry\endcsname\tp@print@generic
  \fi
  \expandafter\gdef\csname l@#3\endcsname##1##2{%
    \expandafter\ifnum \csname c@#1depth\endcsname<#2\relax
    \else
      \bgroup
        \csname tp@#1@extract@data\endcsname{#2}{#3}{##1}{##2}%
        \csname tp@#1@print@entry\endcsname{#3}%
      \egroup
    \fi}}

\def\tp@extract@generic#1#2#3#4{%
}
\def\tp@print@generic#1{%
}

\def\tp@expand@l@contents#1#2#3#4{%
  \sbox\z@{\def\numberline##1{\expandafter\gdef\csname tp@#2@#3Number\endcsname{##1}}\expandonce#1}%
  \ifdim\wd\z@>\z@
    \let\numberline\@gobble%
    \expandafter\expandafter\expandafter\csname tp#3#4\endcsname\expandafter{\expandonce#1}%
  \else
    \expandonce#1%
  \fi}

\endinput
%%
%% End of file `transpect-common.sty'.
