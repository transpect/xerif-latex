%%
%% This is file `transpect-common.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% transpect.dtx  (with options: `common')
%% 
%% IMPORTANT NOTICE:
%% 
%% For the copyright see the source file.
%% 
%% Any modified versions of this file must be renamed
%% with new filenames distinct from transpect-common.sty.
%% 
%% For distribution of the original source see the terms
%% for copying and modification in the file transpect.dtx.
%% 
%% This generated file may be distributed as long as the
%% original source files, as listed above, are part of the
%% same distribution. (The sources need not necessarily be
%% in the same archive or directory.)
\def\fileversion{0.97}%
\def\filedate{2021-02-25}%
%%
%% module for le-tex transpect.cls that provides some commonly used base macros.
%%
%% Maintainer: p.schulz@le-tex.de
%%
%% lualatex  -  texlive > 2019
%%
\NeedsTeXFormat{LaTeX2e}[2019/01/01]
\ProvidesPackage{transpect-common}
    [2020/22/04 0.90 le-tex transpect common module]
\def\afterfi#1\fi{\fi#1}
\def\@afterbox{%
  \everypar{%
    \if@nobreak
      \@nobreakfalse
      \clubpenalty \@M
      \if@afterindent \else
        {\setbox\z@\lastbox}%
        \everypar{}%
      \fi
    \else
      \clubpenalty \@clubpenalty
      {\setbox\z@\lastbox}%
      \everypar{}%
    \fi}}
\def\CalcRatio#1#2{\strip@pt\dimexpr\number\numexpr\number\dimexpr#1\relax*65536/\number\dimexpr#2\relax\relax sp}
\def\@gobbleopt#1#{\@gobble}
\def\tpGobble{%
  \let\footnote\@gobbleopt%
  \let\label\@gobble%
  \let\index\@gobbleopt}%
%% traverse step-wise through counter \#1, start at number \#2 until and including number \#3 and do at every loop \#4 (from \lstinline{forloop.sty}):
\long\def\sh@iterate#1#2#3#4{%
  \advance#1\@ne\relax
  #1=#2\relax%
  \expandafter\ifnum#1>#3\relax%
  \else
    #4%
    \sh@iterate{#1}{\the#1}{#3}{#4}%
  \fi}%
%% \section{Hooks}
%% In this part we provide the facility to utilize Hooks to patch code into different parts of the package depending on options and loaded packages.
\RequirePackage{etoolbox}
\def\tpDeclareHook#1{\expandafter\global\expandafter\let\csname tp@hook@\tp@namespace @#1\endcsname\@empty}
\def\tpAddToHook#1#2{%
  \expandafter\ifx\csname tp@hook@\tp@namespace @#1\endcsname\relax
    \tpDeclareHook{#1}%
  \fi
  \csgappto{tp@hook@\tp@namespace @#1}{#2}%
}
\def\tpUseHook#1{\expandafter\ifx\csname tp@hook@\tp@namespace @#1\endcsname\relax\else\csname tp@hook@\tp@namespace @#1\endcsname\fi}
\def\tpDeclareBlock#1#2{%
  \tpDeclareHook{Before#1#2}%
  \tpDeclareHook{#1Format#2}%
  \tpDeclareHook{After#1#2}%
}
\def\tpUseBlock#1#2{%
  \expandafter\ifx\csname tp@\tp@namespace @#1\endcsname\relax\else
    \tpUseHook{Before#1#2}%
    {\tpUseHook{#1Format#2}\csname tp@\tp@namespace @#1\endcsname}%
    \tpUseHook{After#1#2}%
  \fi}
\def\tpProvideMacro#1#2#3#4{%
  \ltx@LocalExpandAfter\global\expandafter\let\csname tp@\tp@namespace @#4\endcsname\relax
  \expandafter\long\expandafter\protected\expandafter\def\csname #1\endcsname##1{#2\ltx@LocalExpandAfter\long\expandafter\protected\expandafter\gdef\csname tp@\tp@namespace @#4\endcsname{##1}\ignorespaces#3}
}
\def\tpNamespace#1{\def\tp@namespace{#1}}
\DeclareRobustCommand{\tpUseMacro}[1]{\csname tp@\tp@namespace @#1\endcsname\relax}
\DeclareRobustCommand{\tpIfMacro}[3]{\expandafter\ifx\csname tp@\tp@namespace @#1\endcsname\relax#3\else#2\fi}

\def\CSSDeclareClass{\@ifnextchar [{\@css@set@class}{\@css@set@class[]}}%]

\def\@css@set@class[#1]#2{\@ifnextchar [{\css@set@class[#1]{#2}}{\css@set@class[#1]{#2}[]}}%]

\gdef\css@@class@default{}

\def\css@set@class[#1]#2[#3]#4{%
  \def\@argii{#2}\ifx\@argii\@empty\let\@argii\tp@str@default\fi%
  \if!#3!\else
    \expandafter\def\csname css@#1@class@\@argii @parent\endcsname{#3}%
  \fi
  \expandafter\def\csname css@#1@class@\@argii\endcsname{%
    #4%
  }%
}

\def\cssUseClass#1{%
  \expandafter\ifx\csname css@\tp@captype @class@#1\endcsname\relax
    \expandafter\ifx\csname css@@class@#1\endcsname\relax
      \PackageError{transpect-flaots.sty}{Class `#1' not defined!}{Please declare the class `#1'!}%
    \fi
  \fi
  \let\ht@cur@element\tp@captype
  \csname css@@class@#1\endcsname%
  \expandafter\ifx\csname css@\tp@captype @class@#1@parent\endcsname\relax\else
    \expandafter\let\expandafter\@tempa\csname css@\tp@captype @class@#1@parent\endcsname
    \csname css@\tp@captype @class@\@tempa\endcsname
  \fi
  \csname css@\tp@captype @class@#1\endcsname%
}
\begingroup
\catcode`"=12
\gdef\cssParseAttributes#1#2{%
  \if!#1!\else
    \if!#2!\else
      \def\css@cur@node{#1}%
      \@css@parse@attributes #2,,\@nil
    \fi\fi}
\gdef\css@parse@kv#1=#2=#3\@nil{%
  \ifx!#2!\else
    \ifx #2==\else
      \expandafter\def\csname css@\css@cur@node @attr@#1\endcsname{#2}%
    \fi
  \fi}
\gdef\@css@parse@attributes #1,#2,\@nil{%
  \if!#1!\else
    \css@parse@kv#1==\@nil
    \if!#2!\else
      \@css@parse@attributes#2,\@nil
    \fi\fi}
\endgroup

\DeclareRobustCommand{\tpSetProperty}[2]{\expandafter\long\expandafter\protect\expandafter\def\csname tp@\tp@namespace @#1\endcsname{#2}}
\def\tpUseProperty#1{\csname tp@\tp@namespace @#1\endcsname}
\DeclareRobustCommand{\tpIfProp}[3]{\long\def\@tempa{}%
  \expandafter\ifx\csname tp@\tp@namespace @#1\endcsname\@tempa#3\else#2\fi\ignorespaces}
\DeclareRobustCommand{\tpAddToDefault}[2]{%
  \csgappto{tp@#1@default}{#2}%
}
\def\tp@inherit@props#1#2{%
  \expandafter\ifx\csname tp@#2@#1@parent\endcsname\relax\else\expandafter\tp@inherit@props\expandafter{\csname tp@#2@#1@parent\endcsname}{#2}\fi
  \csname tp@#2@#1@properties\endcsname
}
\def\tp@cascade@props#1#2#3{%
  \csname tp@#3@default\endcsname
  \if!#1!\else
    \expandafter\def\csname tp@#3@#2@parent\endcsname{#1}%
    \tp@inherit@props{#1}{#3}%
  \fi
}

\let\hack\@firstofone
\let\Hack\@firstofone
\let\hackfor\@gobble
\let\Hackfor\@gobble

\endinput
%%
%% End of file `transpect-common.sty'.
